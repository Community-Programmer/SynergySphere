// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  username         String
  email            String   @unique
  password         String?
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Account {
  id                String   @id @default(uuid())
  userId            String
  provider          String
  providerAccountId String   @unique
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
 

model EmailVerificationToken {
  id               String   @id @default(uuid())
  userId           String   @unique
  token            String   @unique
  expireAt         DateTime
  createdAt        DateTime @default(now())
}

model PasswordResetToken {
  id               String   @id @default(uuid())
  userId           String   @unique
  token            String   @unique
  expireAt         DateTime
  isUsed           Boolean  @default(false)
  createdAt        DateTime @default(now())
}
