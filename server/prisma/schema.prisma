
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  firstname        String
  lastname         String
  email            String   @unique
  password         String?
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  managedProjects  Project[]
  assignedTasks    Task[] @relation("UserAssignedTasks")
  memberProjects  ProjectMember[]
  }


model EmailVerificationToken {
  id               String   @id @default(uuid())
  userId           String   @unique
  token            String   @unique
  expireAt         DateTime
  createdAt        DateTime @default(now())
}

model PasswordResetToken {
  id               String   @id @default(uuid())
  userId           String   @unique
  token            String   @unique
  expireAt         DateTime
  isUsed           Boolean  @default(false)
  createdAt        DateTime @default(now())
}

model Project {
  id          String   @id @default(uuid())
  name        String
  tags        String[]
  managerId   String
  manager     User     @relation(fields: [managerId], references: [id])
  deadline    DateTime
  priority    String
  image       String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  tasks       Task[] @relation("ProjectTasks")
  members     ProjectMember[]
  }

  model ProjectMember {
    id         String   @id @default(uuid())
    userId     String
    projectId  String
    user       User     @relation(fields: [userId], references: [id])
    project    Project  @relation(fields: [projectId], references: [id])
    role       String   @default("member")
  }

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  assigneeId  String
  assignee    User     @relation("UserAssignedTasks", fields: [assigneeId], references: [id])
  projectId   String
  project     Project  @relation("ProjectTasks", fields: [projectId], references: [id])
  tags        String[]
  dueDate     DateTime
  image       String?
  status      String   @default("Pending")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}